 
services:
  dns:
    build: 
      context: ./dns
      dockerfile: Dockerfile
    container_name: dns
    ports:
      - "53:53/udp"
    networks:
    - asa-network
    
  proxy:
    build: 
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    ports:
      - "80:80/tcp"
    depends_on:
      - web
      - miami-web1
      - miami-cms
    networks:
      - asa-network

  web:
    build: 
      context: ./web1
      dockerfile: Dockerfile
    container_name: web
    networks:
      - asa-network

  miami-web1:
    build: 
      context: ./miami/web1
      dockerfile: Dockerfile
    container_name: miami-web1
    networks:
      - asa-network


  ssh:
    build: 
      context: ./ssh
      dockerfile: Dockerfile
    container_name: ssh
    ports:
      - "22:22"
    networks:
      - asa-network

  db:
    #Docker Networks db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
    networks:
    - asa-network
    
  miami-cms:
    image: wordpress:latest
    container_name: miami-cms
    volumes:
      - wp_data:/var/www/html
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    networks:
    - asa-network
      
volumes:
  db_data:
  wp_data:

#Docker Networks
networks:
  asa-network:
    driver: bridge